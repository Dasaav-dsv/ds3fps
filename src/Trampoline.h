#pragma once

#include "stdafx.h"
#include "Console.h"

unsigned const char NopBytes[16][15] = {
{0x90}, {0x90}, {0x66, 0x90}, {0x0F, 0x1F, 0x00},
{0x0F, 0x1F, 0x40, 0x00}, {0x0F, 0x1F, 0x44, 0x00, 0x00},
{0x66, 0x0F, 0x1F, 0x44, 0x00, 0x00}, {0x0F, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00},
{0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00},
{0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00},
{0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90},
{0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x90},
{0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00},
{0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x40, 0x00},
{0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x44, 0x00, 0x00},
{0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x0F, 0x1F, 0x44, 0x00, 0x00} };

inline void TrampolineJmp(char* InjPoint, const char* JmpTgt, const size_t NopSize)
{
	unsigned char InjBuf[5] = { 0xE9, 0x00, 0x00, 0x00, 0x00 };
	if (std::abs(JmpTgt - InjPoint) > MAXINT32)
	{
		AllocConsoleOnce();
		std::cout << "TrampolineJmp: Target " << reinterpret_cast<const void*>(JmpTgt) << " out of bounds of " << reinterpret_cast<void*>(InjPoint) << "\n";
		throw std::invalid_argument("TrampolineJmp: Target out of bounds");
	};
	int Disp = static_cast<int>(JmpTgt - InjPoint - 5);
	memcpy(InjBuf + 1, &Disp, 4);
	memcpy(InjPoint, InjBuf, 5);
	if (NopSize > 0)
	{
		memcpy(InjPoint + 5, NopBytes[NopSize], NopSize);
	};
}