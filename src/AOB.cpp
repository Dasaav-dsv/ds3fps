#include "AOB.h"

static void* text;
static size_t text_size;

inline char* AOBScanAddress(const unsigned char* AOBString, const char* AOBMask)
{
    const auto pattern = mem::pattern(AOBString, AOBMask);
    const auto region = mem::region(text, text_size);
    char* result = mem::simd_scanner(pattern).scan(region).any();

    if (result == nullptr)
    {
        AllocConsoleOnce();
        std::cout << "AOB string " << AOBString << " not found.\n";
    }

    return result;
}

inline char* AOBScanCode(const unsigned char* AOBString, const char* AOBMask, const int Offset = 0)
{
    return (AOBScanAddress(AOBString, AOBMask) + Offset);
}

inline char** AOBScanBase(const unsigned char* AOBString, const char* AOBMask, const int InOffset = 7, const int OpOffset = 3)
{
    char* addr = AOBScanAddress(AOBString, AOBMask);
    return reinterpret_cast<char**>(addr + *reinterpret_cast<int32_t*>(addr + OpOffset) + InOffset);
}

extern void GetText()
{
    const char TextStrMatch[] = ".text"; // refused to work with char* string

    const auto pattern = mem::pattern(TextStrMatch, ".....");
    const auto region = mem::region(mInfo.lpBaseOfDll, mInfo.SizeOfImage);
    char* result = mem::simd_scanner(pattern).scan(region).any();

    text_size = *reinterpret_cast<uint32_t*>(result + 0x10);
    text = result + *reinterpret_cast<uint32_t*>(result + 0x14);
}

extern void PopulateBases()
{
    const unsigned char GameDataManMatch[] = { 0x48, 0x8B, 0x05, 0x0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xC0, 0x0, 0x0, 0x48, 0x8b, 0x40, 0x0, 0xC3 };
    const unsigned char WorldChrManMatch[] = { 0x48, 0x8B, 0x1D, 0x0, 0x0, 0x0, 0x04, 0x48, 0x8B, 0xF9, 0x48, 0x85, 0xDB, 0x0, 0x0, 0x8B, 0x11, 0x85, 0xD2, 0x0, 0x0, 0x8D };
    const unsigned char FieldAreaMatch[] = { 0x48, 0x8B, 0x0D, 0x0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xC9, 0x74, 0x26, 0x44, 0x8B };
    const unsigned char LockTgtManMatch[] = { 0x48, 0x8B, 0x0D, 0x0, 0x0, 0x0, 0x0, 0xE8, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0xD8, 0x48, 0x85, 0xC0, 0x0F, 0x84, 0x0, 0x0, 0x0, 0x0, 0xC7 };
    const unsigned char SprjFlipperMatch[] = { 0xC6, 0x80, 0x80, 0x0, 0x0, 0x0, 0x01, 0x48, 0x8B, 0x05 };
    const unsigned char SprjRemoMatch[] = { 0x48, 0x85, 0xC0, 0x74, 0x0, 0x80, 0xB8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0F, 0xB6, 0xDB, 0x0F, 0x45, 0xDF, 0x48, 0x8B, 0x0D };
    const unsigned char SprjEventFlagManMatch[] = { 0x48, 0x8B, 0x0D, 0x0, 0x0, 0x0, 0x0, 0x44, 0x0F, 0xB6, 0xCB, 0x41, 0xB8, 0x07, 0x0, 0x0, 0x0, 0x8B, 0xD6 };
    const unsigned char UserInputManagerMatch[] = { 0x48, 0x89, 0x1D, 0x0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xDB, 0x74, 0x14, 0x48, 0x8B, 0xCB };
    const unsigned char FrpgHavokManMatch[] = { 0x48, 0x8B, 0xDA, 0x48, 0x8B, 0xF9, 0x74, 0x35, 0x48, 0x8B, 0x0D };
    const unsigned char SoloParamRepositoryMatch[] = { 0x48, 0x89, 0x5C, 0x24, 0x48, 0x8B, 0xFA, 0x48, 0x8B, 0xD9, 0xC7, 0x44, 0x24, 0x20, 0x0, 0x0, 0x0, 0x0, 0x48 };
    const unsigned char NewMenuSystemMatch[] = { 0x48, 0x8B, 0x05, 0x0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xC0, 0x74, 0x0, 0x80, 0xB8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0F, 0x95, 0xC0, 0xC3 };
    const unsigned char MsgRepositoryMatch[] = { 0x44, 0x8B, 0xF8, 0x44, 0x0F, 0xB6, 0xA7, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x1D, 0x0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xDB, 0x75 };
    const unsigned char CSPcKeyConfigMatch[] = { 0x48, 0x8B, 0x3D, 0x0, 0x0, 0x0, 0x0, 0x33, 0xDB, 0x8B, 0xC3 };
    const unsigned char CSLangMatch[] = { 0x89, 0x2D, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x6C, 0x24, 0x0, 0x89, 0x35 };
    const unsigned char MagicPtrMatch[] = { 0x4C, 0x8D, 0x3D, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8D, 0x34, 0x45, 0x01, 0x0, 0x0, 0x0 };

    const unsigned char GenInputPtrAOBMatch[] = { 0x48, 0x8D, 0x54, 0x24, 0x70, 0xE8, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x9C, 0x24, 0x80, 0x0, 0x0, 0x0 };
  
    const char* GameDataManMask = "...????...??...?.";
    const char* WorldChrManMask = "...???.......??....??.";
    const char* FieldAreaMask = "...????.......";
    const char* LockTgtManMask = "...????.????........????.";
    const char* SprjFlipperMask = "..........";
    const char* SprjRemoMask = "....?..????..........";
    const char* SprjEventFlagManMask = "...????............";
    const char* UserInputManagerMask = "...????........";
    const char* FrpgHavokManMask = "...........";
    const char* SoloParamRepositoryMask = "...................";
    const char* NewMenuSystemMask = "...????....?..?????....";
    const char* MsgRepositoryMask = ".......????...????....";
    const char* CSPcKeyConfigMask = "...????....";
    const char* CSLangMask = "..????....?..";
    const char* MagicPtrMask = "...????........";

    const char* GenInputPtrAOBMask = "......????........";
   
    GameDataMan = AOBScanBase(GameDataManMatch, GameDataManMask);
    WorldChrMan = AOBScanBase(WorldChrManMatch, WorldChrManMask);
    FieldArea = AOBScanBase(FieldAreaMatch, FieldAreaMask);
    LockTgtMan = AOBScanBase(LockTgtManMatch, LockTgtManMask);
    SprjFlipper = AOBScanBase(SprjFlipperMatch, SprjFlipperMask, 14, 10);
    SprjRemo = AOBScanBase(SprjRemoMatch, SprjRemoMask, 25, 21);
    SprjEventFlagMan = AOBScanBase(SprjEventFlagManMatch, SprjEventFlagManMask);
    UserInputManager = AOBScanBase(UserInputManagerMatch, UserInputManagerMask);
    FrpgHavokMan = AOBScanBase(FrpgHavokManMatch, FrpgHavokManMask, 15, 11);
    SoloParamRepository = AOBScanBase(SoloParamRepositoryMatch, SoloParamRepositoryMask, 25, 21);
    NewMenuSystem = AOBScanBase(NewMenuSystemMatch, NewMenuSystemMask);
    MsgRepository = AOBScanBase(MsgRepositoryMatch, MsgRepositoryMask, 18, 14);
    CSPcKeyConfig = AOBScanBase(CSPcKeyConfigMatch, CSPcKeyConfigMask);
    CSLang = reinterpret_cast<int*>(AOBScanBase(CSLangMatch, CSLangMask, 6, 2));
    MagicPtr = reinterpret_cast<char*>(AOBScanBase(MagicPtrMatch, MagicPtrMask));

    GenInputPtrAOB = reinterpret_cast<char*>(AOBScanBase(GenInputPtrAOBMatch, GenInputPtrAOBMask, 0xAF, 0x6));
}

extern void ScanAOBs()
{
    const unsigned char LockOnCodeAOBMatch[] = { 0x74, 0x0, 0x48, 0x8B, 0x0D, 0x0, 0x0, 0x0, 0x0, 0xF3, 0x0F, 0x10, 0x4D, 0x08 };
    const unsigned char LOC_CallAOBMatch[] = { 0x48, 0x8B, 0x05, 0x0, 0x0, 0x0, 0x0, 0x48, 0x33, 0xC4, 0x48, 0x89, 0x85, 0x0, 0x0, 0x0, 0x0, 0x49, 0x8B, 0xD8, 0x48, 0x89, 0x5D, 0x0, 0x44, 0x0F, 0x28, 0xC9 };
    const unsigned char CallSaveLoadEndAOBMatch[] = { 0x85, 0xC0, 0x7F, 0x09, 0xB2, 0x01, 0x33, 0xC9, 0xE8 };
    const unsigned char CSLE_CallAOBMatch[] = { 0x48, 0x89, 0x5C, 0x24, 0x08, 0x57, 0x48, 0x83, 0xEC, 0x20, 0x48, 0x8B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0F, 0xB6, 0xDA, 0x8B, 0xF9 };
    const unsigned char DtorStartAOBMatch[] = { 0x48, 0xC7, 0x40, 0xB8, 0xFE, 0xFF, 0xFF, 0xFF, 0x48, 0x89, 0x58, 0x18, 0x48, 0x89, 0x68, 0x20, 0x48, 0x8B, 0xF9, 0x48, 0x8D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x89, 0x01 };
    const unsigned char StrafeCheckAOB1Match[] = { 0x40, 0x88, 0xBB, 0xC1, 0x02, 0x0, 0x0, 0x48, 0x8B, 0x5C, 0x24, 0x30, 0x48, 0x83, 0xC4, 0x20, 0x5F, 0xC3 };
    const unsigned char StrafeCheckAOB2Match[] = { 0x40, 0x88, 0xB9, 0xC1, 0x02, 0x0, 0x0, 0x48, 0x8B, 0x5C, 0x24, 0x30, 0x48, 0x83, 0xC4, 0x20, 0x5F, 0xC3 };
    const unsigned char GetTAEAOBMatch[] = { 0x48, 0x85, 0xFF, 0x74, 0x5B, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xC9, 0x75, 0x26 };
    const unsigned char GenMsgCodeAOBMatch[] = { 0x48, 0x8D, 0x99, 0x40, 0x01, 0x0, 0x0, 0x8B, 0xFA, 0x8B, 0x53, 0x0C, 0x39, 0x53 , 0x08 };
    const unsigned char FallDeathCodeAOBMatch[] = { 0xC6, 0x80, 0x90, 0x0, 0x0, 0x0, 0x01, 0xE9, 0x0, 0x0, 0x0, 0x0, 0x48 };
    const unsigned char HeadSizeCodeAOBMatch[] = { 0x48, 0x8B, 0x41, 0x50, 0x48, 0x63, 0xD2, 0xF3, 0x0F, 0x10, 0x44, 0x90, 0x08 };
    const unsigned char UpperHandCodeAOBMatch[] = { 0x8B, 0xB0, 0x24, 0x01, 0x0, 0x0 };
    const unsigned char CamSensCodeAOBMatch[] = { 0xF3, 0x0F, 0x10, 0x96, 0x80, 0x02, 0x0, 0x0, 0xF3, 0x0F, 0x59, 0xD2 };
    const unsigned char MenuValCodeAOBMatch[] = { 0x8B, 0x93, 0xC8, 0x0B, 0x0, 0x0, 0xE8 };
    const unsigned char StartScreenHookAOBMatch[] = { 0x48, 0x8B, 0x59, 0x08, 0x48, 0x8B, 0xF9, 0x48, 0x8D, 0x8B, 0xE0, 0x09, 0x0, 0x0 };
    const unsigned char HkRunCodeAOBMatch[] = { 0xFF, 0x50, 0x0, 0x48, 0x8B, 0xCF, 0x0F, 0xB7, 0xD0 };
    const unsigned char RunStateCodeAOBMatch[] = { 0x83, 0x8F, 0x2C, 0x01, 0x0, 0x0, 0x04, 0x45, 0x84, 0xFF };
    const unsigned char AimFadeCodeAOBMatch[] = { 0x0F, 0x2F, 0xCF, 0x48, 0x0F, 0x46, 0xC1, 0x8B, 0x0, 0x89, 0x87 };

    const unsigned char CamCodeAOB01Match[] = { 0x66, 0x0F, 0x7F, 0x4F, 0x30, 0x0F, 0x28, 0x57, 0x40, 0x0F, 0x28, 0xDA, 0x0F, 0x28, 0xC2 };
    const unsigned char CamCodeAOB02Match[] = { 0x0F, 0x58, 0xC6, 0x0F, 0x29, 0x46, 0x40, 0x41, 0x0F, 0x28, 0x46, 0x30 };
    const unsigned char CamCodeAOB03Match[] = { 0x66, 0x41, 0x0F, 0x7F, 0x76, 0x30, 0x41, 0x0F, 0x28, 0x3E, 0x45, 0x0F, 0x28, 0x5E, 0x10 };
    const unsigned char CamCodeAOB04Match[] = { 0x41, 0x0F, 0x29, 0x56, 0x30, 0x45, 0x0F, 0x57, 0xED };
    const unsigned char CamCodeAOB05Match[] = { 0x66, 0x0F, 0x7F, 0x7E, 0x40, 0x4D, 0x85, 0xFF };
    const unsigned char CamCodeAOB06Match[] = { 0x66, 0x0F, 0x7F, 0x46, 0x40, 0x48, 0x8B, 0x8D, 0x0, 0x0, 0x0, 0x0, 0x48, 0x33, 0xCC };
    const unsigned char CamCodeAOB07Match[] = { 0x48, 0x8B, 0xC1, 0x66, 0x0F, 0x7F, 0x01, 0x0F, 0x28, 0x4A, 0x10, 0x66, 0x0F, 0x7F, 0x49, 0x10, 0x0F, 0x28, 0x42, 0x20, 0x66, 0x0F, 0x7F, 0x41, 0x20, 0x0F, 0x28, 0x4A, 0x30, 0x66, 0x0F, 0x7F, 0x49, 0x30, 0xC3 };
    const unsigned char CamCodeAOB08Match[] = { 0x4C, 0x8D, 0x45, 0x50, 0x48, 0x8B, 0xD3, 0x48, 0x8D, 0x8D, 0x0, 0x0, 0x0, 0x0, 0xE8, 0x0, 0x0, 0x0, 0x0, 0x0F, 0x28, 0x0, 0x66, 0x0F, 0x7F, 0x03, 0x0F, 0x28, 0x48, 0x10, 0x66, 0x0F, 0x7F, 0x4B, 0x10 };
    const unsigned char CamCodeAOB09Match[] = { 0x66, 0x0F, 0x7F, 0x66, 0x20, 0x0F, 0x28, 0x85, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0F, 0x7F, 0x46, 0x30 };
    const unsigned char CamCodeAOB13Match[] = { 0x48, 0x8D, 0x7E, 0x10, 0x66, 0x0F, 0x7F, 0x2F, 0x66, 0x0F, 0x7F, 0x66, 0x20 };
    const unsigned char CamCodeAOB18Match[] = { 0x66, 0x0F, 0x7F, 0x46, 0x40, 0x48, 0x8D, 0x4E, 0x40, 0xE8 };
    const unsigned char CamCodeAOB19Match[] = { 0xF3, 0x0F, 0x11, 0x4E, 0x50, 0x4C, 0x89, 0xB5, 0xA0, 0x12, 0x0, 0x0 };
    const unsigned char CamCodeAOB20Match[] = { 0x44, 0x88, 0x7C, 0x24, 0x20, 0xE8, 0x0, 0x0, 0x0, 0x0, 0x0F, 0x28, 0xB4, 0x24, 0xA0, 0x0, 0x0, 0x0 };
    const unsigned char CamCodeAOB21Match[] = { 0xBA, 0x01, 0x0, 0x0, 0x0, 0x48, 0x8B, 0xCF, 0xE8, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8D, 0x53, 0x10, 0x48, 0x8B, 0xCF };
    const unsigned char CamCodeAOB22Match[] = { 0x66, 0x0F, 0x7F, 0x4B, 0x10, 0x0F, 0x28, 0x8B, 0x80, 0x0, 0x0, 0x0 };
    const unsigned char CamCodeAOB26Match[] = { 0x44, 0x0F, 0x29, 0x43, 0x40, 0xF3, 0x0F, 0x10, 0x83, 0xF8, 0x0, 0x0, 0x0 };

    const unsigned char GetEventFlagAOBMatch[] = { 0x40, 0x53, 0x48, 0x83, 0xEC, 0x0, 0x80, 0xB9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8B, 0xDA };
    const unsigned char SetEventFlagAOBMatch[] = { 0x40, 0x55, 0x57, 0x41, 0x54, 0x41, 0x57, 0x48, 0x83, 0xEC, 0x0, 0x80, 0xB9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x45, 0x0F, 0xB6, 0xF9, 0x45, 0x0F, 0xB6, 0xE0 };

    const char* LockOnCodeAOBMask = ".?...????.....";
    const char* LOC_CallAOBMask = "...????......????......?....";
    const char* CallSaveLoadEndAOBMask = ".........";
    const char* CSLE_CallAOBMask = "............?????.....";
    const char* DtorStartAOBMask = ".....................?????...";
    const char* StrafeCheckAOB1Mask = "..................";
    const char* StrafeCheckAOB2Mask = "..................";
    const char* GetTAEAOBMask = "......??????.....";
    const char* GenMsgCodeAOBMask = ".............";
    const char* FallDeathCodeAOBMask = "........??...";
    const char* HeadSizeCodeAOBMask = ".............";
    const char* UpperHandCodeAOBMask = "......";
    const char* CamSensCodeAOBMask = "............";
    const char* MenuValCodeAOBMask = ".......";
    const char* StartScreenHookAOBMask = "..............";
    const char* HkRunCodeAOBMask = "..?......";
    const char* RunStateCodeAOBMask = "..........";
    const char* AimFadeCodeAOBMask = "...........";

    const char* CamCodeAOB01Mask = "...............";
    const char* CamCodeAOB02Mask = "............";
    const char* CamCodeAOB03Mask = "...............";
    const char* CamCodeAOB04Mask = ".........";
    const char* CamCodeAOB05Mask = "........";
    const char* CamCodeAOB06Mask = "........????...";
    const char* CamCodeAOB07Mask = "...................................";
    const char* CamCodeAOB08Mask = "..........????.????................";
    const char* CamCodeAOB09Mask = "........????.....";
    const char* CamCodeAOB13Mask = ".............";
    const char* CamCodeAOB18Mask = "..........";
    const char* CamCodeAOB19Mask = "............";
    const char* CamCodeAOB20Mask = "......????........";
    const char* CamCodeAOB21Mask = ".........????.......";
    const char* CamCodeAOB22Mask = "............";
    const char* CamCodeAOB26Mask = ".............";

    const char* GetEventFlagAOBMask = ".....?..????...";
    const char* SetEventFlagAOBMask = "..........?..????.........";

    LockOnCodeAOB = AOBScanCode(LockOnCodeAOBMatch, LockOnCodeAOBMask, 9);
    LOC_CallAOB = AOBScanCode(LOC_CallAOBMatch, LOC_CallAOBMask, -0x6A);
    CallSaveLoadEndAOB = AOBScanCode(CallSaveLoadEndAOBMatch, CallSaveLoadEndAOBMask, 8);
    CSLE_CallAOB = AOBScanCode(CSLE_CallAOBMatch, CSLE_CallAOBMask);
    DtorStartAOB = AOBScanCode(DtorStartAOBMatch, DtorStartAOBMask);
    StrafeCheckAOB1 = AOBScanCode(StrafeCheckAOB1Match, StrafeCheckAOB1Mask);
    StrafeCheckAOB2 = AOBScanCode(StrafeCheckAOB2Match, StrafeCheckAOB2Mask);
    GetTAEAOB = AOBScanCode(GetTAEAOBMatch, GetTAEAOBMask, 5);
    GenMsgCodeAOB = AOBScanCode(GenMsgCodeAOBMatch, GenMsgCodeAOBMask, 7);
    FallDeathCodeAOB = AOBScanCode(FallDeathCodeAOBMatch, FallDeathCodeAOBMask);
    HeadSizeCodeAOB = AOBScanCode(HeadSizeCodeAOBMatch, HeadSizeCodeAOBMask);
    UpperHandCodeAOB = AOBScanCode(UpperHandCodeAOBMatch, UpperHandCodeAOBMask);
    CamSensCodeAOB = AOBScanCode(CamSensCodeAOBMatch, CamSensCodeAOBMask);
    MenuValCodeAOB = AOBScanCode(MenuValCodeAOBMatch, MenuValCodeAOBMask);
    StartScreenHookAOB = AOBScanCode(StartScreenHookAOBMatch, StartScreenHookAOBMask);
    HkRunCodeAOB = AOBScanCode(HkRunCodeAOBMatch, HkRunCodeAOBMask, 3);
    RunStateCodeAOB = AOBScanCode(RunStateCodeAOBMatch, RunStateCodeAOBMask);
    AimFadeCodeAOB = AOBScanCode(AimFadeCodeAOBMatch, AimFadeCodeAOBMask, 3);

    CamCodeAOB01 = AOBScanCode(CamCodeAOB01Match, CamCodeAOB01Mask);
    CamCodeAOB02 = AOBScanCode(CamCodeAOB02Match, CamCodeAOB02Mask);
    CamCodeAOB03 = AOBScanCode(CamCodeAOB03Match, CamCodeAOB03Mask);
    CamCodeAOB04 = AOBScanCode(CamCodeAOB04Match, CamCodeAOB04Mask);
    CamCodeAOB05 = AOBScanCode(CamCodeAOB05Match, CamCodeAOB05Mask);
    CamCodeAOB06 = AOBScanCode(CamCodeAOB06Match, CamCodeAOB06Mask);
    CamCodeAOB07 = AOBScanCode(CamCodeAOB07Match, CamCodeAOB07Mask, 0x1D);
    CamCodeAOB08 = AOBScanCode(CamCodeAOB08Match, CamCodeAOB08Mask, 0x1E);
    CamCodeAOB09 = AOBScanCode(CamCodeAOB09Match, CamCodeAOB09Mask);
    CamCodeAOB10 = CamCodeAOB07 - 0x12;
    CamCodeAOB11 = CamCodeAOB08 - 0x8;
    CamCodeAOB12 = CamCodeAOB07 - 0x1D;
    CamCodeAOB13 = AOBScanCode(CamCodeAOB13Match, CamCodeAOB13Mask);
    CamCodeAOB14 = CamCodeAOB08 + 0x9;
    CamCodeAOB15 = CamCodeAOB09 + 0xC;
    CamCodeAOB16 = CamCodeAOB07 - 0x9;
    CamCodeAOB17 = CamCodeAOB08 + 0x12;
    CamCodeAOB18 = AOBScanCode(CamCodeAOB18Match, CamCodeAOB18Mask);
    CamCodeAOB19 = AOBScanCode(CamCodeAOB19Match, CamCodeAOB19Mask);
    CamCodeAOB20 = AOBScanCode(CamCodeAOB20Match, CamCodeAOB20Mask);
    CamCodeAOB21 = AOBScanCode(CamCodeAOB21Match, CamCodeAOB21Mask, 0xD);
    CamCodeAOB22 = AOBScanCode(CamCodeAOB22Match, CamCodeAOB22Mask);
    CamCodeAOB23 = CamCodeAOB22 + 0x28;
    CamCodeAOB24 = CamCodeAOB22 + 0x17;
    CamCodeAOB25 = CamCodeAOB22 + 0x45;
    CamCodeAOB26 = AOBScanCode(CamCodeAOB26Match, CamCodeAOB26Mask);
    CamCodeAOB27 = CamCodeAOB22 - 0xD8;
    CamCodeAOB28 = CamCodeAOB27 + 0x4A;
    CamCodeAOB29 = CamCodeAOB28 + 0x4F;
    CamCodeAOB30 = CamCodeAOB22 + 0x1C;

    GetEventFlagAOB = AOBScanCode(GetEventFlagAOBMatch, GetEventFlagAOBMask);
    SetEventFlagAOB = AOBScanCode(SetEventFlagAOBMatch, SetEventFlagAOBMask);
}
